{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network the VMs will be connected to."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet the VMs will be placed in."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group containing the existing virtual network."
            }
        },
        "computerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the VM with the domain controller."
            }
        },
        "azureAdminUpn": {
            "type": "string",
            "metadata": {
                "description": "The UPN of the account that you're currently logged in with on the Azure Portal. This account should at least have the 'contributor' or 'owner' role on the subscription level for the deployment to succeed. The template will fail if you enter a user account that requires MFA."
            }
        },
        "azureAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the Azure admin UPN above."
            }
        },
        "tenantAdminDomainJoinUPN": {
            "type": "string",
            "metadata": {
                "description": "The template will fail if you enter a user account that requires MFA or an application that is secured by a certificate. The UPN or ApplicationId must be an RDS Owner in the Windows Virtual Desktop Tenant to create the hostpool or an RDS Owner of the host pool to provision the host pool with additional VMs."
            }
        },
        "tenantAdminDomainJoinPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the tenant admin UPN."
            }
        }
    },
    "variables": {
        "_artifactsLocation": "https://raw.githubusercontent.com/madsamuel/wvd/master/dev",
        "AdminPasswordSecret": "adminPassword",
        "existingDomainUsername": "[first(split(parameters('tenantAdminDomainJoinUPN'), '@'))]",
        "existingDomainName": "[split(parameters('tenantAdminDomainJoinUPN'), '@')[1]]",
        "identityName": "WVDServicePrincipal",
        "location": "[resourcegroup().location]",
        "rgName": "[resourcegroup().name]",
        "keyvaultName": "[concat('keyvault', parameters('utcValue'))]",
        "assetsName": "[concat('aset', toLower(parameters('utcValue')))]",
        "profilesName": "[concat('prof', toLower(parameters('utcValue')))]",
        "autoAccountName": "[concat('auto', toLower(parameters('utcValue')))]",
        "uniquestr": "[uniqueString(resourceGroup().id, deployment().name)]",
        "runbookName": "[concat('wvdrunbook','-',variables('uniquestr'))]",
        "subnet-id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]",
        "tenantId": "[subscription().tenantId]",
        "uniqueBase0": "[toLower(uniquestring(variables('identityName'), resourceGroup().id, parameters('utcValue'),'MSISetup'))]",
        "uniqueBase": "[toLower(uniquestring(variables('identityName'), resourceGroup().id, parameters('utcValue'),variables('autoAccountName')))]",
        "uniqueBase2": "[toLower(uniquestring(variables('identityName'), subscription().id, parameters('utcValue'),'devOpsSetup'))]",
        "newGuid0": "[guid(variables('uniqueBase0'))]",
        "newGuid": "[guid(variables('uniqueBase'))]",
        "newGuid2": "[guid(variables('uniqueBase2'))]",
        "scriptUri0": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/configureMSI.ps1')]",
        "scriptUri1": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/createServicePrincipal.ps1')]",
        "scriptUri2": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/devopssetup.ps1')]",
        "devOpsName": "WVDQuickstart28",   
        "devOpsProjectName": "WVDQuickstartProject28",
        "targetGroup": "WVDTestUsers",
        "automationVariables": [
            {
                "name": "subscriptionid",
                "value": "[concat('\"',subscription().subscriptionId,'\"')]"
            },
            {
                "name": "accountName",
                "value": "[concat('\"',variables('autoAccountName'),'\"')]"
            },
            {
                "name": "AppName",
                "value": "[concat('\"',variables('identityName'),'\"')]"
            },
            {
                "name": "ResourceGroupName",
                "value": "[concat('\"',variables('rgName'),'\"')]"
            },
            {
                "name": "fileURI",
                "value": "[concat('\"',variables('_artifactsLocation'),'\"')]"
            },
            {
                "name": "orgName",
                "value": "[concat('\"',variables('devOpsName'),'\"')]"
            },
            {
                "name": "projectName",
                "value": "[concat('\"',variables('devOpsProjectName'),'\"')]"
            },
            {
                "name": "location",
                "value": "[concat('\"',variables('location'),'\"')]"
            },
            {
                "name": "adminUsername",
                "value": "[concat('\"',variables('existingDomainUsername'),'\"')]"
            },
                        {
                "name": "domainName",
                "value": "[concat('\"',variables('existingDomainName'),'\"')]"
            },
            {
                "name": "keyvaultName",
                "value": "[concat('\"',variables('keyvaultName'),'\"')]"
            },
            {
                "name": "assetsName",
                "value": "[concat('\"',variables('assetsName'),'\"')]"
            },
            {
                "name": "profilesName",
                "value": "[concat('\"',variables('profilesName'),'\"')]"
            },
            {
                "name": "tenantAdminDomainJoinUPN",
                "value": "[concat('\"',parameters('tenantAdminDomainJoinUPN'),'\"')]"
            },
            {
                "name": "computerName",
                "value": "[concat('\"',parameters('computerName'),'\"')]"
            },
            {
                "name": "existingVnetName",
                "value": "[concat('\"',parameters('existingVnetName'),'\"')]"
            },
            {
                "name": "existingSubnetName",
                "value": "[concat('\"',parameters('existingSubnetName'),'\"')]"
            },
            {
                "name": "virtualNetworkResourceGroupName",
                "value": "[concat('\"',parameters('virtualNetworkResourceGroupName'),'\"')]"
            },
            {
                "name": "targetGroup",
                "value": "[concat('\"', variables('targetGroup'),'\"')]"
            }
        ]   
    },
    "functions": [
    ],
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('autoAccountName'), '/', variables('automationVariables')[copyIndex()].name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('autoAccountName'))]"
            ],
            "tags": {},
            "properties": {
                "value": "[variables('automationVariables')[copyIndex()].value]"
            },
            "copy": {
                "name": "variableLoop",
                "count": "[length(variables('automationVariables'))]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2015-01-01-preview",
            "name": "[variables('autoAccountName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "tags": {},
            "properties": {
                "sku": {
                    "name": "Free"
                }
            },
            "resources": [
                {
                    "type": "runbooks",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[concat(variables('runbookName'), '0')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/AzureCredentials')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/domainJoinCredentials')]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                            "uri": "[variables('scriptUri0')]",
                            "version": "1.0.0.0"
                        }
                    } 
                },
                {
                    "type": "jobs",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('newGuid0')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/', variables('runbookName'), '0')]"
                    ],
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "[concat(variables('runbookName'), '0')]"
                        }
                    }
                },
                {
                    "type": "runbooks",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('runbookName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/AzureCredentials')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/domainJoinCredentials')]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                            "uri": "[variables('scriptUri1')]",
                            "version": "1.0.0.0"
                        }
                    }
                },
                {
                    "type": "credentials",
                    "apiVersion": "2015-01-01-preview",
                    "name": "AzureCredentials",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "userName": "[parameters('azureAdminUpn')]",
                        "password": "[parameters('azureAdminPassword')]"
                    }
                },
                                {
                    "type": "credentials",
                    "apiVersion": "2015-01-01-preview",
                    "name": "domainJoinCredentials",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "userName": "[parameters('tenantAdminDomainJoinUPN')]",
                        "password": "[parameters('tenantAdminDomainJoinPassword')]"
                    }
                },
                {
                    "type": "jobs",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('newGuid')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/', variables('runbookName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/', variables('runbookName'), '0')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('newGuid0'))]"
                    ],
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "[variables('runbookName')]"
                        }
                    }
                },
                {
                    "type": "runbooks",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[concat(variables('runbookName'), '2')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('microsoft.visualstudio/account/', variables('devOpsName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                            "uri": "[variables('scriptUri2')]",
                            "version": "1.0.0.0"
                        }
                    }
                },
                {
                    "type": "jobs",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('newGuid2')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/',variables('newGuid'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/',variables('runbookName'), '2')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('newGuid0'))]",
                        "[concat('microsoft.visualstudio/account/', variables('devOpsName'))]"
                    ],
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "[concat(variables('runbookName'), '2')]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyvaultName')]",
            "location": "[variables('location')]",
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableSoftDelete": true,
                "lockForDeletion": false,
                "tenantId": "[variables('tenantId')]",
                "accessPolicies": [
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "secretsObject": {
                    "value": {
                        "secrets": []
                    }
                }
            },
            "dependsOn": [
               "[concat('Microsoft.Resources/deploymentScripts', '/checkAzureCredentials')]"
            ],
            "resources": [
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2015-06-01",
            "name": "[concat(variables('keyvaultName'), '/', variables('AdminPasswordSecret'))]",
            "properties": {
                "name": "[variables('AdminPasswordSecret')]",
                "value": "[parameters('tenantAdminDomainJoinPassword')]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultName'))]"
            ]
        },
        {
            "name": "[variables('devOpsName')]",
            "type": "microsoft.visualstudio/account",
            "location": "centralus",
            "apiVersion": "2014-04-01-preview",
            "properties": {
              "operationType": "Create",
              "accountName": "[variables('devOpsName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deploymentScripts', '/checkAzureCredentials')]"
            ],
            "resources": []
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "name": "createDevopsPipeline",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('newGuid2'))]"
            ],
            "kind": "AzureCLI",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]": {}
                }
            },
            "properties": {
                "forceUpdateTag": 1,
                "azCliVersion": "2.0.80",
                "arguments": "[concat(variables('devOpsName'), ' ', variables('devOpsProjectName'), ' ', parameters('azureAdminUpn'), ' ', parameters('azureAdminPassword'), ' ', 'true')]",
                "primaryScriptUri": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/createDevopsPipeline.sh')]",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "name": "checkAzureCredentials",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('newGuid0'))]"
            ],
            "kind": "AzureCLI",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]": {}
                }
            },
            "properties": {
                "forceUpdateTag": 1,
                "azCliVersion": "2.0.80",
                "timeout": "PT30M",
                "arguments": "[concat(variables('devOpsName'), ' ', variables('devOpsProjectName'), ' ', parameters('azureAdminUpn'), ' ', parameters('azureAdminPassword'), ' ', 'false')]",
                "primaryScriptUri": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/createDevopsPipeline.sh')]",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "userCreation",
            "dependsOn": [
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('newGuid0'))]"
            ],
            "resourceGroup": "[parameters('virtualNetworkResourceGroupName')]",
            "subscriptionId": "[subscription().subscriptionId]",
            "properties": {
            "mode": "Incremental",
            "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {},
                "variables": {},
                "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2019-12-01",
                    "name": "[concat(parameters('computerName'),'/', 'userCreation')]",
                    "location": "[resourcegroup().location]",
                    "dependsOn": [
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.7",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('_artifactsLocation'), '/Uploads/createUsers.ps1')]"
                            ],
                            "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File createUsers.ps1 ', variables('existingDomainName'), ' ', variables('targetGroup'))]"
                        }
                    }
                }
                ]
            },
            "parameters": {}
            }
        }
    ],
    "outputs": {
    }
}